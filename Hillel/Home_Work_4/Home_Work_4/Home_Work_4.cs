using System;
using static System.Console;

/*Домашнее задание 4*/

namespace Home_Work_4 {
    class Home_Work_4 {
        static void Main(string[] args) {
            int userSelectTask = 0; //флаг для выбора Таска
            //переменные для работы программ
            int a = 0, b = 0, c = 0, positiveNumber = 0, negativeNumber = 0;
            //бесконечный цикл который запрашивает у пользователя выбор программы при вводе 0 - завершение программы
            // если пользователь введет неправильный номер - спросит еще
            for (; ; ) {
                UserInput("\n\nВведите номер Задания от 1 до 25. Для выхода нажмите 0.\n",ref userSelectTask);
                if(userSelectTask == 0) { break; }
                switch (userSelectTask) {
                    case 1 :
                        Task_1(ref a, ref b, ref c);
                        break;
                    case 2:
                        Task_2();
                        break;
                    case 3:
                        Task_3();
                        break;
                    case 4:
                        Task_4();
                        break;
                    case 5:
                        Task_5();
                        break;
                    case 6:
                        Write("\nКоличество положительных цифр в вашем наборе ({0}, {1}, {2}) = {3}", a, b, c, Task_6(ref a,ref b,ref c));
                        break;
                    case 7:
                        Task_7(ref a, ref b, ref c, out positiveNumber, out negativeNumber);
                        Write("\nВ Вашем наборе ({0}, {1}, {2}) " +
                            "\nколичество положительных цифр = {3}" +
                            "\nколичество отрицательных цифр = {4}", a, b, c, positiveNumber, negativeNumber);
                        break;
                    case 8:
                        Task_8(ref a, ref b);
                        break;

                    default:
                        break;                   
                }

            }
                
            


            
            
        }

        /* Метод для пользователя - запрос на введение значений 
            и проверка корректности ввода значения для  целочисленых чисел
            и будет запрос до тех пор , пока не введет целочисленное значение*/
        static void UserInput(string message, ref int variable) {
            Write(message);
            for (; ; ) {
                try {
                    variable = Convert.ToInt32(ReadLine());
                    break;
                }
                catch {
                    Write("Вы ввели не целочиcленное значение, попробуйте еще раз: ");
                    continue;
                }
            }
        }
        /*Еще один перегруженный метод запроса ввода для пользователя( 3х значений)  */
        static void UserInput (ref int A, ref int B, ref int C) {
            UserInput("Введите значение переменной A: ", ref A);
            UserInput("Введите значение переменной B:", ref B);
            UserInput("Введите значение переменной C:", ref C);
        }

        /*Task 1: Даны переменные A, B, C.
         * Изменить их значения, переместив содержимое A в B, B — в C, C — в A,
         * и вывести новые значения переменных A, B, C.
         * передаю параметры по ссылку что бы внутри менялись значеня
         поставил пользователю ограничение на то, что он может вводить только int*/
        static void Task_1 (ref int A ,ref int B ,ref int C ) {
            UserInput(ref A, ref B, ref C);
            int temp = 0;
            temp = A;
            A = C;
            C = B;
            B = temp;
            WriteLine($"Если изменить значения Ваших переменных " +
                $"переместив содержимое A в B, B — в C, C — в A, " +
                $"То получим А = {A}, B = {B}, C = {C} \n");
        }

        /*2. Дано двузначное число. Вывести вначале его левую цифру (десятки), а затем — его правую цифру (единицы). 
         * Для нахождения десятков использовать операцию деления нацело, 
         * для нахождения единиц — операцию взятия остатка от деления 
         */
        static void Task_2() {
            int number = 0, leftNumber = 0, rightNumber = 0;
//цикл заппроса введения числа до тех пор, пока пользователь не введет двухзначное
            for (; ; ) {
                UserInput("Введите целое двузначное число: ",ref number);
                if ((number >= 10 && number <= 99) | (number >= -99 && number <= -10)) { break; }
                    else { continue;  }
            }
            leftNumber = number / 10;
            rightNumber = number % 10;
            WriteLine("Левая цифра (десятки) = {0}, " +
                "правая цифра (единицы) = {1}.", leftNumber, rightNumber);
        }

        /*5. Дано целое число. Если оно является положительным, то прибавить к нему 1; 
         * если отрицательным, то вычесть из него 2; если нулевым, то заменить его на 10.
         * Вывести полученное число.*/
        static void Task_5() {
            int number = 0;
            string sOutput = "Ваше число ";
            UserInput("Введите целое число: ", ref number);
            if (number > 0) {
                number += 1;
                sOutput += "- положительное, мы прибавили к нему 1 и оно равно " + number;
            }
             else if (number < 0) {
                number -= 2;
                sOutput += "- отрицательное, мы вычли из него 2 и оно равно " + number;
            }
                else {
                number = 10;
                sOutput += "равно нулю, мы заменили его на 10" ;
            }
            Write( sOutput+ "\n");
        }

        /*6. Даны три целых числа. Найти количество положительных чисел в исходном наборе */
        static byte Task_6(ref int A,ref int B,ref int C) {
            UserInput(ref A, ref B, ref C);
            byte result = 0;
            if (A >= 0) { result++; }
            if (B >= 0) { result++; }
            if (C >= 0) { result++; }
            return result;
        }

        /*7. Даны три целых числа. Найти количество положительных и количество отрицательных чисел в исходном наборе.
         * для нахождения кол-ва положительных чисел использовал метод Task_6 который выполняет эту логику
         в передаваемых параметрах переменные для количества положительных и отрицательных чисел указал через 
         параметр out ,поскольку нет возможности вернуть 2 параметра(не используя перечисления, массивы и Tuple)*/
        static void Task_7 (ref int A, ref int B, ref int C, out int positiveNumber , out int negativeNumber ) {
            positiveNumber = Task_6(ref A,ref B,ref C);
            negativeNumber = 0;
            if (A < 0) { negativeNumber++; }
            if (B < 0) { negativeNumber++; }
            if (C < 0) { negativeNumber++; }
        }

        /*8. Даны две переменные целого типа: A и B.
         * Если их значения не равны, то присвоить каждой переменной сумму этих значений, 
         * а если равны, то присвоить переменным нулевые значения.
         * Вывести новые значения переменных A и B.
         *  передаю параметры через ref - этим изменим значения*/
         static void Task_8(ref int A, ref int B) {
            UserInput("Введите значение переменной А: ", ref A);
            UserInput("Введите значение переменной B: ", ref B);
            if (A != B) {
                A = B = A + B;
                WriteLine($"Значения Ваших переменных не равны, поэтому мы присвоили каждой переменной сумму этих значений: " +
                    $"A = {A}, B = {B}");
            }
            else {
                A = B = 0;
                WriteLine($"Значения Ваших переменных равны, поэтому мы присвоили каждой переменной нулевое значение: " +
                    $"A = {A}, B = {B}");
            }
         }








        /*Task 3 и 4 - теоретические но выведется по запросу пользователя в качестве текста
         * 3. Если сделать объявление int i=11; чему будет равно значение выражения i / 5?*/
        static void Task_3() {
            string strOutput = "Если сделать объявление int i=11; чему будет равно значение выражения i / 5?" +
                "\n Ответ: 2\n";
            WriteLine(strOutput);
        }
        /*4. Каким будет значение b, если bool b=(double)(1/2) 
         4.1 Какого типа переменные подойдут для хранения следующей информации:
         Возраст человека Население города Число звезд в галактике Один байт ОЗУ Средняя зарплата за год 
         Сведения спортсмен или нет Цвет фигуры Длина в мм. 
         Длина в см. Фамилия человека Время года Пол человека */
        static void Task_4() {
            string strOutput = "4. Каким будет значение b, если bool b=(double)(1/2)" +
                "\nОтвет: Ошибка компиляции, т.к. недьзя приводить double k bool" +
                "\n4.1 Какого типа переменные подойдут для хранения следующей информации: " +
                "\nВозраст человека - byte достаточно, т.к. диапазон до 255." +
                "\nНаселение города - uint т.к. население не может быть отрицательным и вряд-ли население города превыcит 4 млн. человек" +
                "\nЧисло звезд в галактике - ulong т.к. гугл говорит, что в Нашей галактике 200 милиардов звезд" +
                "\nОдин байт ОЗУ - byte" +
                "\nСредняя зарплата за год - float достаточно, т.к. зарплата средняя, и хватит 2 разряда точности для копеек." +
                "\nСведения спортсмен или нет - bool" +
                "\nЦвет фигуры - string" +
                "\nлина в мм. - ulong т.к. можно и 1000 км. и большее количество к примеру хранить в милиметрах" +
                "\nДлина в см. - ulong т.к. можно и 1000 км. и большее количество к примеру хранить в милиметрах" +
                "\nФамилия человека - string" +
                "\nВремя года - string" +
                "\nПол человека - string или помечать одним символом char ('m'/ 'f')";
            Write(strOutput);
        }
    }
}
